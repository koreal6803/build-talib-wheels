name: Build TA-Lib Wheels (from GitHub)

on:
  workflow_dispatch:  # Manual trigger

env:
  TA_LIB_PY_VERSION: "0.6.3"  # Latest version

jobs:
  build_wheels:
    name: Build wheel for ${{ matrix.os }} / ${{ matrix.arch }} / Py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']
        arch: [x86_64]
        include:
        #   Add ARM64 (aarch64) Linux support
          - os: ubuntu-latest
            python-version: '3.10'
            arch: aarch64
          - os: ubuntu-latest
            python-version: '3.11'
            arch: aarch64
          - os: ubuntu-latest
            python-version: '3.12'
            arch: aarch64
          - os: ubuntu-latest
            python-version: '3.13'
            arch: aarch64

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    # Common setup steps that apply to all builds
    - name: Clone TA-Lib Python Repository
      run: |
        git clone https://github.com/ta-lib/ta-lib-python.git
        
    - name: Override with custom files
      run: |
        cp custom_setup.py ta-lib-python/setup.py
        cp custom_pyproject.toml ta-lib-python/pyproject.toml
        cp custom_README.md ta-lib-python/README.md
        echo "Using custom setup.py and pyproject.toml"

    # Setup steps for ARM64 builds
    - name: Set up QEMU
      if: matrix.arch == 'aarch64'
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64

    # TA-Lib C library installation - platform specific
    # Option 1: Use the existing file
    - name: Build wheel for Linux (${{ matrix.arch }})
      if: runner.os == 'Linux'
      run: |
        mkdir -p dist wheelhouse
        chmod +x build_linux.sh
        docker run --rm -v $(pwd):/work \
          ${{ matrix.arch == 'aarch64' && '--platform linux/arm64' || '' }} \
          -w /work \
          quay.io/pypa/manylinux2014_${{ matrix.arch }} \
          ./build_linux.sh ${{ matrix.arch }} ${{ matrix.python-version }}

    # Setup steps for regular x86_64 builds
    - name: Set up Python ${{ matrix.python-version }} on macOS
      if: runner.os == 'macOS'
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install TA-Lib (macOS)
      if: runner.os == 'macOS'
      run: |
        echo "Updating Homebrew..."
        brew update --quiet
        echo "Installing TA-Lib C library..."
        brew install ta-lib
        echo "TA-Lib C library installed via Homebrew."
        echo "TA_LIBRARY_PATH=$(brew --prefix ta-lib)/lib" >> $GITHUB_ENV
        echo "TA_INCLUDE_PATH=$(brew --prefix ta-lib)/include" >> $GITHUB_ENV
        cd ta-lib-python
        echo "Building wheel for TA-Lib $TA_LIB_PY_VERSION..."
        python -m pip install build
        python -m build --wheel . -o ../dist
        if [ $? -ne 0 ]; then
          echo "::error::Failed to build wheel from cloned repository."
          exit 1
        fi
        echo "Wheel build completed successfully."
        
    - name: List built wheel
      run: ls -l dist

    # Upload wheel artifacts
    - name: Upload Wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}-${{ matrix.arch }}-py${{ matrix.python-version }}-${{ env.TA_LIB_PY_VERSION }}
        path: dist
        if-no-files-found: error