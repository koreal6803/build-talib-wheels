name: Build TA-Lib Wheels (from PyPI)

on:
  workflow_dispatch: # 允許手動觸發
  push:
    branches: [ "main" ] # 當 push 到 main 分支時觸發

# 定義 TA-Lib 的版本（可根據需要更新）
env:
  TA_LIB_PY_VERSION: "0.6.3" # 最新版本

jobs:
  build_wheels:
    name: Build wheel for ${{ matrix.os }} / Py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.12'] # 可擴充其他版本

    steps:
    - name: Checkout repository (optional but good practice)
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    # --- 安裝 TA-Lib C 庫 (平台相關) ---
    - name: Install TA-Lib C Library (Linux - Build from Source 0.4.0)
      if: runner.os == 'Linux'
      run: |
        echo "Installing build tools..."
        sudo apt-get update -qq
        sudo apt-get install -y -qq build-essential wget
        echo "Downloading TA-Lib C library source (0.4.0)..."
        wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz -O ta-lib-0.4.0-src.tar.gz -q
        echo "Extracting source..."
        tar -xzf ta-lib-0.4.0-src.tar.gz
        cd ta-lib/
        echo "Configuring TA-Lib C library..."
        ./configure --prefix=/usr > configure.log 2>&1 || (cat configure.log && exit 1)
        echo "Building TA-Lib C library..."
        make > make.log 2>&1 || (cat make.log && exit 1)
        echo "Installing TA-Lib C library..."
        sudo make install > make_install.log 2>&1 || (cat make_install.log && exit 1)
        echo "TA-Lib C library installation complete."
        cd .. # 回到工作目錄

    - name: Install TA-Lib C Library (macOS via Homebrew)
      if: runner.os == 'macOS'
      run: |
        echo "Updating Homebrew..."
        brew update --quiet
        echo "Installing TA-Lib C library..."
        brew install ta-lib
        echo "TA-Lib C library installed via Homebrew."
        # 設定環境變數以便 build 時找到庫與 header 檔案
        echo "TA_LIBRARY_PATH=$(brew --prefix ta-lib)/lib" >> $GITHUB_ENV
        echo "TA_INCLUDE_PATH=$(brew --prefix ta-lib)/include" >> $GITHUB_ENV
        echo "TA_LIBRARY_PATH set to: $(brew --prefix ta-lib)/lib"
        echo "TA_INCLUDE_PATH set to: $(brew --prefix ta-lib)/include"

    # --- 安裝 Python 構建依賴與 NumPy ---
    - name: Install Python build dependencies and NumPy
      run: python -m pip install --upgrade pip setuptools wheel build "numpy>=2.0"

    # --- 直接從 GitHub clone TA-Lib Python repository ---
    - name: Clone TA-Lib Python Repository
      run: |
        git clone https://github.com/ta-lib/ta-lib-python.git
        # 如有需要，可切換到特定分支或 tag，例如：
        # cd ta-lib-python && git checkout main

    # --- 從 clone 下來的程式碼構建 wheel ---
    - name: Build wheel from cloned repository
      run: |
        cd ta-lib-python
        echo "Building wheel for TA-Lib $TA_LIB_PY_VERSION..."
        python -m build --wheel . -o ../dist
        if [ $? -ne 0 ]; then
          echo "::error::Failed to build wheel from cloned repository."
          exit 1
        fi
        echo "Wheel build completed successfully."
    

    # --- 上傳生成的 wheel 作為 artifact ---
    - name: Upload Wheels
      uses: actions/upload-artifact@v4
      with:
        name: talib-wheel-${{ matrix.os }}-py${{ matrix.python-version }}-${{ env.TA_LIB_PY_VERSION }}
        path: dist/*.whl
        if-no-files-found: error # 若未找到 wheel 則失敗
