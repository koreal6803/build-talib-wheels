name: Build TA-Lib Wheels (from GitHub)

on:
  workflow_dispatch:  # 手動觸發
  push:
    branches: [ "main" ]  # 當 push 到 main 分支時觸發

env:
  TA_LIB_PY_VERSION: "0.6.3"  # 最新版本

jobs:
  build_wheels:
    name: Build wheel for ${{ matrix.os }} / ${{ matrix.arch }} / Py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']
        arch: [x86_64]
        include:
          # 添加 ARM64 (aarch64) Linux 支持
          - os: ubuntu-latest
            python-version: '3.10'
            arch: aarch64
          - os: ubuntu-latest
            python-version: '3.11'
            arch: aarch64
          - os: ubuntu-latest
            python-version: '3.12'
            arch: aarch64
          - os: ubuntu-latest
            python-version: '3.13'
            arch: aarch64

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # 設定 QEMU 以支持 ARM 架構
    - name: Set up QEMU
      if: matrix.arch == 'aarch64'
      uses: docker/setup-qemu-action@v3
      with:
        platforms: arm64

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      if: matrix.arch == 'x86_64'
      with:
        python-version: ${{ matrix.python-version }}

    # --- 安裝 TA-Lib C 庫 (平台與架構相關) ---
    - name: Install TA-Lib C Library (Linux x86_64 - Build from Source 0.4.0)
      if: runner.os == 'Linux' && matrix.arch == 'x86_64'
      run: |
        echo "Installing build tools..."
        sudo apt-get update -qq
        sudo apt-get install -y -qq build-essential wget
        echo "Downloading TA-Lib C library source (0.4.0)..."
        wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz -O ta-lib-0.4.0-src.tar.gz -q
        echo "Extracting source..."
        tar -xzf ta-lib-0.4.0-src.tar.gz
        cd ta-lib/
        echo "Configuring TA-Lib C library..."
        ./configure --prefix=/usr > configure.log 2>&1 || (cat configure.log && exit 1)
        echo "Building TA-Lib C library..."
        make > make.log 2>&1 || (cat make.log && exit 1)
        echo "Installing TA-Lib C library..."
        sudo make install > make_install.log 2>&1 || (cat make_install.log && exit 1)
        echo "TA-Lib C library installation complete."
        cd ..
        # 設定環境變數
        echo "TA_INCLUDE_PATH=/usr/include" >> $GITHUB_ENV
        echo "TA_LIBRARY_PATH=/usr/lib" >> $GITHUB_ENV

    - name: Install TA-Lib C Library (macOS via Homebrew)
      if: runner.os == 'macOS'
      run: |
        echo "Updating Homebrew..."
        brew update --quiet
        echo "Installing TA-Lib C library..."
        brew install ta-lib
        echo "TA-Lib C library installed via Homebrew."
        echo "TA_LIBRARY_PATH=$(brew --prefix ta-lib)/lib" >> $GITHUB_ENV
        echo "TA_INCLUDE_PATH=$(brew --prefix ta-lib)/include" >> $GITHUB_ENV

    # --- 在 aarch64 的 Docker 環境中構建 ---
    - name: Build wheel for Linux aarch64
      if: runner.os == 'Linux' && matrix.arch == 'aarch64'
      run: |
        # 準備目錄結構
        mkdir -p dist
        # 使用 Docker 容器進行跨平台構建
        docker run --rm -v $(pwd):/work --platform linux/arm64 -w /work \
          python:${{ matrix.python-version }}-slim bash -c "
            # 安裝構建工具
            apt-get update && apt-get install -y build-essential wget git
            
            # 下載並安裝 TA-Lib C 庫
            cd /tmp
            wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz -q
            tar -xzf ta-lib-0.4.0-src.tar.gz
            cd ta-lib/
            ./configure --prefix=/usr
            make -j$(nproc)
            make install
            cd /work
            
            # 安裝 Python 依賴
            pip install --upgrade pip setuptools wheel build 'numpy>=2.0'
            
            # 複製自訂 setup.py
            git clone https://github.com/ta-lib/ta-lib-python.git
            cp custom_setup.py ta-lib-python/setup.py
            
            # 構建 wheel
            cd ta-lib-python
            TA_INCLUDE_PATH=/usr/include TA_LIBRARY_PATH=/usr/lib python -m build --wheel . -o ../dist
          "

    # --- 安裝 Python 構建依賴與 NumPy (僅適用於非aarch64構建) ---
    - name: Install Python build dependencies and NumPy
      if: matrix.arch == 'x86_64'
      run: python -m pip install --upgrade pip setuptools wheel build "numpy>=2.0"

    # --- 從 GitHub 直接 clone TA-Lib Python repository (僅適用於非aarch64構建) ---
    - name: Clone TA-Lib Python Repository
      if: matrix.arch == 'x86_64'
      run: |
        git clone https://github.com/ta-lib/ta-lib-python.git
        
    # --- 使用自訂的 setup.py 覆蓋原來的 setup.py (僅適用於非aarch64構建) ---
    - name: Override setup.py with custom version
      if: matrix.arch == 'x86_64'
      run: |
        cp custom_setup.py ta-lib-python/setup.py
        echo "Using custom setup.py:"
        head -n 10 ta-lib-python/setup.py
        
    # --- 從 clone 下來的程式碼構建 wheel (僅適用於非aarch64構建) ---
    - name: Build wheel from cloned repository
      if: matrix.arch == 'x86_64'
      run: |
        cd ta-lib-python
        echo "Building wheel for TA-Lib $TA_LIB_PY_VERSION..."
        python -m build --wheel . -o ../dist
        if [ $? -ne 0 ]; then
          echo "::error::Failed to build wheel from cloned repository."
          exit 1
        fi
        echo "Wheel build completed successfully."
        
    - name: List built wheel
      run: ls -l dist

    # --- 上傳生成的 wheel 作為 artifact ---
    - name: Upload Wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}-${{ matrix.arch }}-py${{ matrix.python-version }}-${{ env.TA_LIB_PY_VERSION }}
        path: dist
        if-no-files-found: error